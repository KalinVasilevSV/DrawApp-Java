package draw.Model;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.Line2D;

public class LineShape extends draw.Model.Shape{
	
	private static int count = 0;
	
	Line2D.Double line = new Line2D.Double();
	Polygon selectionBox = new Polygon();
	
	public LineShape(Rectangle rect) {
		super(rect);
		Point A = getLocation();
		Point B = new Point((int)rect.getMaxX(),(int)rect.getMaxY());
		line.setLine(A,B);
		this.setSelectionBox(rect);
		this.setName("LineShape"+(++count));
	}
	
	public LineShape(draw.Model.LineShape line) {
		super(line.getRectangle());
	}
	
	public void setSelectionBox(Rectangle rect) {
		int x1 = rect.x-30;
		int x2 = rect.x+30;
		int x3 = (int) (rect.getMaxX()-30);
		int x4 = (int) (rect.getMaxX()+30);
		int y1 = rect.y;
		int y2 = y1;
		int y3 = (int) rect.getMaxY();
		int y4 = y3;
		selectionBox = new Polygon(new int[] {x1,x2,x3,x4},new int[] {y1,y2,y3,y4}, 4);
	}
	
	@Override
	public boolean Contains(Point point) {
		return selectionBox.contains(point);
	}
	
	public void DrawSelf(Graphics grfx) {
		super.DrawSelf(grfx);
		Graphics2D g2 = (Graphics2D)grfx;
		line.setLine(new LineShape(getRectangle()).line);
		this.setSelectionBox(getRectangle());
        g2.setStroke(getBorderStroke());
		g2.setColor(isSelected() ? draw.Model.Shape.selectionColor : getBorderColor()); //unlike other classes LineShape uses borderColor
		g2.draw(line); // maybe introduce randomization of these, line requires serious rework
	}
}
